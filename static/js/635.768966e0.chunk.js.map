{"version":3,"file":"static/js/635.768966e0.chunk.js","mappings":";4OACA,EAAuB,wBAAvB,EAAuD,yBAAvD,EAAuF,wBAAvF,EAAkP,6BAAlP,EAAuR,yBAAvR,EAA2T,sCCW9SA,EAAY,WACrB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA8BC,EAAAA,EAAAA,KAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,YAGRC,EAAY,IAAIC,gBAAgBC,OAAOC,SAASC,QAChDC,EAAQL,EAAUM,IAAI,SACtBC,EAAWP,EAAUM,IAAI,aAG/BE,EAAAA,EAAAA,YAAU,WACFH,GACAV,GAASc,EAAAA,EAAAA,IAAM,CAAEJ,MAAAA,EAAOE,SAAAA,IAE/B,GAAE,CAACZ,EAAUU,EAAOE,IAerB,OACI,iCACI,6BACI,cAAGG,KAAK,yCAAR,6BAGJ,kBAAMC,UAAWC,EAAUC,SAlBd,SAAAC,GACjBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACftB,GACIc,EAAAA,EAAAA,IAAM,CACFJ,MAAOW,EAAKE,SAASb,MAAMc,MAC3BZ,SAAUS,EAAKE,SAASX,SAASY,SAGzCH,EAAKI,OACR,EAQ0DC,aAAa,MAAhE,WACI,mBAAOV,UAAWC,EAAlB,mBAEI,kBAAOU,KAAK,QAAQC,KAAK,cAE7B,mBAAOZ,UAAWC,EAAlB,sBAEI,kBAAOU,KAAK,WAAWC,KAAK,iBAEhC,mBAAQZ,UAAWC,EAAUU,KAAK,SAAlC,qBAGA,SAAC,KAAD,CAASX,UAAWC,EAAUY,GAAG,YAAjC,6BAoBHzB,IACG,gBAAKY,UAAWC,EAAhB,UACI,eAAGD,UAAWC,EAAd,WACI,kBAAMD,UAAWC,EAAjB,UACKd,EAAKyB,KADV,OADJ,gEAgBnB,EC9Fc,SAASE,IACpB,OACI,4BACI,SAACC,EAAA,EAAD,WACI,yCAEJ,SAAChC,EAAD,MAGX","sources":["webpack://test-goit-following/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.js","pages/Login.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginForm_form__gPEx5\",\"label\":\"LoginForm_label__F7sLE\",\"link\":\"LoginForm_link__IJw1a\",\"active\":\"LoginForm_active__PKBif\",\"linkButton\":\"LoginForm_linkButton__c6Z0t\",\"spanLogIn\":\"LoginForm_spanLogIn__KmXiX\",\"container\":\"LoginForm_container__YDFcb\",\"title\":\"LoginForm_title__5FilZ\",\"spanName\":\"LoginForm_spanName__97gG2\",\"spanlink\":\"LoginForm_spanlink__afaUn\"};","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\n\nimport { useAuth } from 'hooks';\nimport { logIn } from 'redux/auth/authOperations';\n\nimport css from './LoginForm.module.css';\n\n\n\n\nexport const LoginForm = () => {\n    const dispatch = useDispatch();\n    const { user, IsRegistrIn } = useAuth();\n\n    //! Параметры email и password из URL\n    const urlParams = new URLSearchParams(window.location.search);\n    const email = urlParams.get('email');\n    const password = urlParams.get('password');\n\n    //! Если есть параметры email и password из URL\n    useEffect(() => {\n        if (email) {\n            dispatch(logIn({ email, password }));\n        }\n    }, [dispatch, email, password]);\n\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        const form = e.currentTarget;\n        dispatch(\n            logIn({\n                email: form.elements.email.value,\n                password: form.elements.password.value,\n            })\n        );\n        form.reset();\n    };\n\n    return (\n        <>\n            <button>\n                <a href=\"http://localhost:3033/api/users/google\">Login Google</a>\n            </button>\n\n            <form className={css.form} onSubmit={handleSubmit} autoComplete=\"off\">\n                <label className={css.label}>\n                    Email\n                    <input type=\"email\" name=\"email\" />\n                </label>\n                <label className={css.label}>\n                    Password\n                    <input type=\"password\" name=\"password\" />\n                </label>\n                <button className={css.link} type=\"submit\">LOG IN</button>\n\n                {/* //* -------- 1-var: Кнопка REGISTRATION АКТИВНА до РЕГИСТРАЦИИ: -------- */}\n                <NavLink className={css.link} to=\"/register\">REGISTRATION</NavLink>\n\n                {/* //? -------- 2-var: Кнопка REGISTRATION не активна до РЕГИСТРАЦИИ: -------- */}\n                {/* <button className={css.link}\n                    type=\"button\"\n                    disabled={!IsRegistrIn}\n                >\n                    {\n                        IsRegistrIn\n                            ?\n                            <NavLink className={css.linkButton} to=\"/register\">REGISTRATION</NavLink>\n                            :\n                            <span className={css.spanLogIn}>\n                                REGISTRATION\n                            </span>\n                    }\n                </button> */}\n            </form>\n\n            {/* //! 1 - вариант: Приглашение ЗАЛОГИНИТЬСЯ */}\n            {IsRegistrIn && (\n                <div className={css.container}>\n                    <p className={css.title}>\n                        <span className={css.spanName}>\n                            {user.name},\n                        </span>\n                        &nbsp;&nbsp;thank you for your registration. Please LOG IN\n                    </p>\n                </div>\n            )}\n            {/* //! 2 - вариант: Приглашение ЗАЛОГИНИТЬСЯ */}\n            {/* <div className={css.container}>\n                <p className={css.title}>\n                    {IsRegistrIn ? `${user.name} thank you for your registration. Please LOG IN` : \"\"}\n                </p>\n            </div> */}\n        </>\n    );\n};\n","import { Helmet } from 'react-helmet';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n    return (\n        <div>\n            <Helmet>\n                <title>LOG IN</title>\n            </Helmet>\n            <LoginForm />\n        </div>\n    );\n}\n"],"names":["LoginForm","dispatch","useDispatch","useAuth","user","IsRegistrIn","urlParams","URLSearchParams","window","location","search","email","get","password","useEffect","logIn","href","className","css","onSubmit","e","preventDefault","form","currentTarget","elements","value","reset","autoComplete","type","name","to","Login","Helmet"],"sourceRoot":""}