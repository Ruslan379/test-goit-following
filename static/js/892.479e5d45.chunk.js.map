{"version":3,"file":"static/js/892.479e5d45.chunk.js","mappings":";wNACA,GAAgB,iBAAY,yCAAoC,iBAAmB,2CAA2C,MAAQ,gCAAgC,gBAAkB,0CAA0C,iBAAmB,2CAA2C,qBAAuB,+CAA+C,KAAO,+BAA+B,oBAAsB,yDCmCnZ,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MA+DjB,OACE,iBAAKC,UAAWC,EAAAA,kBAAhB,WAEE,gBAAKD,UAAWC,EAAAA,iBAAhB,2BAEA,cAAGD,UAAWC,EAAAA,MAAd,4BAEA,kBAGEC,SAvEe,SAACC,GACpBA,EAAMC,iBACNC,QAAQC,IAAI,sBAAuBH,EAAMI,OAAOC,QAChD,IAAMA,EAASL,EAAMI,OAAOC,OAAOC,MAAM,GACzCJ,QAAQC,IAAI,UAAWE,GACvBH,QAAQC,IAAI,eAAgBE,EAAOE,MAEnC,IAAMC,EAAW,IAAIC,SAErBD,EAASE,OAAO,SAAUL,GAC1BH,QAAQC,IAAI,YAAaK,GAgCzBf,GAASkB,EAAAA,EAAAA,IAAaH,IACtBb,EAAS,YAAa,CAAEiB,SAAS,GAClC,EAwBG,WAOE,kBAAOf,UAAWC,EAAAA,UAAlB,UAGE,kBAGEe,KAAK,OACLN,KAAK,cAOT,mBAEEM,KAAK,SAFP,iGAQF,SAAC,KAAD,CAAShB,UAAWC,EAAAA,gBAAqBgB,GAAG,YAA5C,UACE,iBAAMjB,UAAWC,EAAAA,oBAAjB,iCAMP","sources":["webpack://test-goit-following/./src/pages/UploadAvatarPage/UploadAvatarPage.module.css?5cea","pages/UploadAvatarPage/UploadAvatarPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Сontainer\":\"UploadAvatarPage_Сontainer__Ir9bd\",\"UserProfileTitle\":\"UploadAvatarPage_UserProfileTitle__D8yo6\",\"Title\":\"UploadAvatarPage_Title__Fgrc2\",\"btnGoToHomePage\":\"UploadAvatarPage_btnGoToHomePage__j9Xph\",\"btnGoToHomePage2\":\"UploadAvatarPage_btnGoToHomePage2__W92R5\",\"AddUploadContactsBtn\":\"UploadAvatarPage_AddUploadContactsBtn__lZsmu\",\"hide\":\"UploadAvatarPage_hide__gj4eW\",\"TotalUploadContacts\":\"UploadAvatarPage_TotalUploadContacts__i2bU3\"};","// import { useDispatch, useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from \"react-router-dom\";\nimport { NavLink } from 'react-router-dom';\n\nimport { changeAvatar } from 'redux/auth/authOperations';\n\n\nimport css from './UploadAvatarPage.module.css';\n\n//? НЕ НАДО для Kapu$ta:\n// //!  +++++++++++++++++++ firebase ++++++++++++++++++++++++++++\n// import { initializeApp } from \"firebase/app\";\n// import { getStorage } from \"firebase/storage\";\n// import { ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\n\n\n// // Your web app's Firebase configuration\n// const firebaseConfig = {\n//   apiKey: \"AIzaSyAJCkgGuoopUtogXXP5uwOnsJ29-UCECiY\",\n//   authDomain: \"contacts-book-backend.firebaseapp.com\",\n//   projectId: \"contacts-book-backend\",\n//   storageBucket: \"contacts-book-backend.appspot.com\",\n//   messagingSenderId: \"328355692785\",\n//   appId: \"1:328355692785:web:a473dcce1b45a071456950\"\n// };\n\n// //! Initialize Firebase\n// const app = initializeApp(firebaseConfig);\n// console.log(\"app:\", app);//!\n\n// const storage = getStorage(app);\n// //!  +++++++++++++++++++ firebase ++++++++++++++++++++++++++++\n\n\n//----------------------------------------------------------------------\nexport default function UploadAvatarPage() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(\"event.target.image:\", event.target.avatar); //!\n    const avatar = event.target.avatar.files[0];\n    console.log(\"avatar:\", avatar); //!\n    console.log(\"avatar.name:\", avatar.name); //!\n\n    const formData = new FormData();\n    // data.append('avatar', avatar, avatar.name);\n    formData.append('avatar', avatar);\n    console.log(\"formData:\", formData); //!\n\n\n    //? НЕ НАДО для Kapu$ta:\n    // //!++++++++++++++++++++++++++++++++++++ Загрузка ссылки АВАТАРКИ на Firebase Storage без обработки++++++++++++++++++++++++++++++++++++++++++++++\n    // //! Отправка АВАТАР на Storage\n    // const avatarName = avatar.name;\n\n    // async function uploadAvatarDownloadURLfirebaseStorage() {\n    //   const storageRef = ref(storage, `avatars/${avatarName}`);\n    //   console.log(\"storageRef:\", storageRef); //!\n\n    //   // const blob = new Blob([formData], { type: 'image/png' }); //! так НЕ работает\n    //   // const blob = new Blob(formData, { type: 'image/jpeg' }); //! так НЕ работает\n    //   // const blob = await formData.blob(); //! TypeError: formData.blob is not a function\n    //   const blob = new Blob([avatar], { type: 'image/png' });\n    //   console.log(\"blob:\", blob); //!\n\n    //   // const uploadBytesAvatar = await uploadBytes(storageRef, blob); //* так тоже работает\n    //   const uploadBytesAvatar = await uploadBytes(storageRef, avatar);\n    //   console.log(\"uploadBytesAvatar:\", uploadBytesAvatar); //!\n\n    //   //! Получение АБСОЛЮТНОЙ ссылки на на АВАТАР\n    //   const avatarURL2 = await getDownloadURL(ref(storage, `avatars/${avatarName}`));\n    //   console.log(\"АСОЛЮТНЫЙ (ПОЛНЫЙ) путь к новому Jimp-файлу аватара в папке назначения -> avatarURL2:\", avatarURL2); //!;\n\n    //   return avatarURL2;\n    // };\n    // uploadAvatarDownloadURLfirebaseStorage();\n    // //!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n\n    dispatch(changeAvatar(formData));\n    navigate(\"/expenses\", { replace: true });\n  };\n\n\n\n  // const form = document.getElementById(\"form\");\n  // form.addEventListener(\"submit\", function (event) {\n  //   event.preventDefault();\n  //   const { image } = this.elements;\n  //   console.log(\"image.value ==>\", image.value); //!\n  //   console.log(\"image.files[0] ==>\", image.files[0]); //!\n  //   const data = new FormData();\n  //   data.append(\"image\", image.files[0]);\n  //   console.log(\"data:\", data); //!\n  // })\n\n\n\n  return (\n    <div className={css.Сontainer}>\n\n      <div className={css.UserProfileTitle}>User profile</div>\n\n      <p className={css.Title}>Change avatar</p>\n\n      <form\n        // id=\"form\"\n        // className={css.Form}\n        onSubmit={handleSubmit}\n      // encType=\"multipart/form-data\"\n      >\n\n        <label className={css.FormLabel}>\n          {/* <label className={s.label} htmlFor=\"imageUpload\">Choose file</label> //! Вариант Юры */}\n          {/* <input type=\"file\" id=\"imageUpload\" accept=\"image/png, image/jpeg\" style={{ display: 'none' }} {...register('avatar')} />  //! Вариант Юры */}\n          <input\n            // className={css.FormInput}\n            // id=\"inputImage\"\n            type=\"file\"\n            name=\"avatar\"\n          // multiple\n          // required\n          />\n        </label>\n        {/* <br /> */}\n\n        <button\n          // className={css.FormBtn}\n          type=\"submit\"\n        // disabled={isLoading}\n        >\n          Отправить файл\n        </button>\n      </form>\n      <NavLink className={css.btnGoToHomePage} to=\"/expenses\">\n        <span className={css.btnGoToHomePageText}>Go to home page</span>\n      </NavLink>\n\n      {/* <ToastContainer autoClose={1500} theme={\"colored\"} /> */}\n    </div>\n  );\n}\n\n\n//! Вариант Юры\n// export default function FormInputFile({ register }) {\n//   return <div className={s.box}>\n//     <label htmlFor=\"imageUpload\" className={s.label}>Choose file</label>\n//     <input type=\"file\" id=\"imageUpload\" accept=\"image/png, image/jpeg\" style={{ display: 'none' }} {...register('avatar')} />\n//   </div>\n// }\n"],"names":["UploadAvatarPage","dispatch","useDispatch","navigate","useNavigate","className","css","onSubmit","event","preventDefault","console","log","target","avatar","files","name","formData","FormData","append","changeAvatar","replace","type","to"],"sourceRoot":""}